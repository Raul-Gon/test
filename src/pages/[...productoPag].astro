---
import BaseLayouts from "../layouts/BaseLayouts.astro";
import ProductoImagen from "../components/ProductoImagen.astro";
import ProductoCaracteris from "../components/ProductoCaracteris.astro";
import ProductoEscaparate from "../components/ProductoEscaparate.astro";

//le añadimos el prerender para hacerlo dinamico
export const prerender = false;
//este archivo es ahora dinamico porque hace una pagina con el id del producto y solo le manda esa al cliente 

// Importar variables de entorno y la metemos en una constante para despues usarla en la llamada a la API
const SECRET_TOKEN = import.meta.env.SECRET_API_TOKEN;


// Extraer ID de la URL
const rawSlug = Astro.params.productoPag;
console.log("Astro.params.productoPag:", rawSlug);

let product = null;

if (rawSlug) {
  const slugParts = rawSlug.split("/");
  const lastPart = slugParts[slugParts.length - 1];
  const id = lastPart.split("--")[1];

  console.log("ID extraído:", id);

  if (id) {
    // Construir y ejecutar consulta a la API
    const query = `query {
          Favoriteproducts(filter: {id: {eq: "${id}"}}) {
            id
            brand
            model
            price
            productimage {
              url
            }
            description
          }
    }`;

    const dataProduct = await fetch("https://graphql.apirocket.io", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        "Authorization": `Bearer ${SECRET_TOKEN}`,
      },
      body: JSON.stringify({ query }),
    }).then(res => res.json());

    console.log("Respuesta de la API:", dataProduct);
    console.log(dataProduct.data?.Favoriteproducts?.length);

    if (dataProduct.data?.Favoriteproducts?.length > 0) {
      product = dataProduct.data.Favoriteproducts[0];
      console.log("Producto obtenido:", product);
    } else {
      console.error("No se encontraron productos con el ID proporcionado.");
    }
  } else {
    console.error("No se pudo extraer un ID válido.");
  }
} else {
  console.error("Astro.params.muestraModelo es undefined o vacío.");
}

---

<BaseLayouts titulo= {product.model} descripcion= {product.descripcion}>
	<h1 class="hidden">{product.model}</h1>
	
	<main>
		<section class="max-w-[1200px] mx-6 mt-10 xl:mx-auto">
			<div class="static w-full flex flex-col md:flex md:flex-row gap-4 lg:gap-0">    
				<ProductoImagen description={ product.description } productImage={ product.productimage.url } />
				<ProductoCaracteris product={ product } />
			</div>						
		</section>
		<section class="overflow-hidden">
			<div class="max-w-[1200px] mx-6 mt-10 xl:mx-auto">
				<ProductoEscaparate />
				<ProductoEscaparate />
			</div>
		</section>
	</main>
</BaseLayouts>